// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

#include "cose.h"
#include "testutils.cpp"
#include <gmock/gmock.h>
#include <gtest/gtest.h>
#include <stdexcept>
#include <ccf/crypto/openssl/openssl_wrappers.h>
#include <ccf/crypto/pem.h>
#include <ccf/crypto/rsa_key_pair.h>
#include <ccf/service/tables/cert_bundles.h>
#include <openssl/core_names.h>
#include <openssl/encoder.h>
#include <openssl/param_build.h>

using namespace testing;
using namespace scitt;
using namespace testutils;

namespace
{
  TEST(CoseTest, GetHeaders)
  {
    const std::vector<uint8_t>& signed_statement =
      from_hex_string("d28459041aa4012603706170706c69636174696f6e2f6a736f6e0fa201785f6469643a783530393a303a7368613235363a6a4755655375446370646d613562586d646741767a684175336a6256352d6a4175533849583858636f6b453a3a7375626a6563743a434e3a436f7365506c617967726f756e64205369676e6572026464656d6f1821825901e3308201df30820186a003020102021100eb423350288849a3d9a008ead7910405300a06082a8648ce3d040302303d310b300906035504061302494531153013060355040a130c446f4e6f7454727573744d65311730150603550403130e436f7365506c617967726f756e64301e170d3235303532303030333334315a170d3235303532353030333334315a3044310b300906035504061302494531153013060355040a130c446f4e6f7454727573744d65311e301c06035504031315436f7365506c617967726f756e64205369676e65723059301306072a8648ce3d020106082a8648ce3d0301070342000427c9b9cfbd82263ce9bbca66202b873265b6f3a75cef9c85e70cc7b467c2046bcd6c0893b2f06c99259b274712c8f282126da1bc940ab0c067128c9b5e3824b6a360305e300e0603551d0f0101ff040403020780302b0603551d250424302206082b06010505070303060a2b060104018237020116060a2b0601040182373d0101301f0603551d230418301680149e9583c8f1a55b8d8ce2a341b0e517ca6bc48aad300a06082a8648ce3d040302034700304402207ebf7f00d05987a298151d25e3b5ab370dbc199d3bd172875b433cf0b1c067d60220248344c6680405da3ba37818ae351e622fc576bc0df658ebbb1659108294e6035901af308201ab30820151a003020102020101300a06082a8648ce3d040302303d310b300906035504061302494531153013060355040a130c446f4e6f7454727573744d65311730150603550403130e436f7365506c617967726f756e64301e170d3235303330383134353934315a170d3335303330383134353934315a303d310b300906035504061302494531153013060355040a130c446f4e6f7454727573744d65311730150603550403130e436f7365506c617967726f756e643059301306072a8648ce3d020106082a8648ce3d0301070342000453c27150933f683c3003bd52c3eb14a6554d400f2bd3c1c1d8065ad82528807810b905937cdb4f1f63dd5741bf53e3a3bd6491d07726e42da11dc546ddabbba5a3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e041604149e9583c8f1a55b8d8ce2a341b0e517ca6bc48aad300a06082a8648ce3d040302034800304502201c85a56047202819427b69c2b106a4adff829b99a88e60bddde43eb5bde58fca0221008a2b642dec9ddbe6e4ee8f0579a7ae09f2c5e01d7e3775d526730e7fe072baa1a04d7b22666f6f223a22626172227d58409d74bf7a8fe86abee6b008de92f69d1e6381d84ccbda95ba4915b1d1f8574eac90c1cb1e04ebdf09ac8a9ec5a63b500ddacc7acf619d25fe252e6ada39ec09e5");
    cose::ProtectedHeader phdr;
    cose::UnprotectedHeader uhdr;
    std::tie(phdr, uhdr) = cose::decode_headers(signed_statement);
    EXPECT_EQ(phdr.alg.value(), -7);
    EXPECT_EQ(phdr.cwt_claims.iss.value(), "did:x509:0:sha256:jGUeSuDcpdma5bXmdgAvzhAu3jbV5-jAuS8IX8XcokE::subject:CN:CosePlayground Signer"); 
    EXPECT_EQ(uhdr.x5chain.has_value(), false);
  }
}