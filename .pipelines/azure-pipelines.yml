trigger:
  branches:
    include:
    - main
  tags:
    include:
    - '*'

parameters:
  - name: CCF_VERSION
    type: string
    default: 4.0.7

resources:
  containers:
    - container: sgx
      image: mcr.microsoft.com/ccf/app/dev:${{ parameters.CCF_VERSION }}-sgx
      options: --device /dev/sgx_enclave:/dev/sgx_enclave --device /dev/sgx_provision:/dev/sgx_provision -v /dev/sgx:/dev/sgx

    - container: virtual
      image: mcr.microsoft.com/ccf/app/dev:${{ parameters.CCF_VERSION }}-virtual

variables:
  # This is used in functional tests to make certain tests mandatory
  # in CI, but optional during local development. 
  SCITT_CI: 1
  ACR_REGISTRY_STAGING: confidentialledgeracrstaging.azurecr.io
  ACR_REGISTRY_RELEASE: confidentialledgeracrprod.azurecr.io

stages:
  - stage: test
    jobs:
      - template: common.yml
        parameters:
          Name: test_sgx_no_prefix_tree
          DisplayName: Test (SGX, no prefix tree)
          Platform: sgx
          Pool: scitt-dc-pool
          Environment:
            ENABLE_PREFIX_TREE: OFF
          FunctionalTestArguments: '--enable-perf'
          PublishPerfResults: true

      - template: common.yml
        parameters:
          Name: test_sgx
          DisplayName: Test (SGX, with prefix tree)
          Platform: sgx
          Pool: scitt-dc-pool
          Environment:
            ENABLE_PREFIX_TREE: ON
          FunctionalTestArguments: '--enable-prefix-tree --enable-faketime'
          InstallPackages: [ faketime ]

      - template: common.yml
        parameters:
          Name: test_virtual
          DisplayName: Test (Virtual, with prefix tree)
          Platform: virtual
          Environment:
            ENABLE_PREFIX_TREE: ON
          FunctionalTestArguments: '--enable-prefix-tree --enable-faketime'
          InstallPackages: [ libcurl4-openssl-dev, faketime ]

      - template: common.yml
        parameters:
          Name: test_sgx_docker
          DisplayName: Test (SGX on Docker, no prefix tree)
          Platform: sgx
          Pool: scitt-dc-pool
          Variant: Docker
          ImageFilename: scitt-sgx.tar
          Environment:
            DOCKER: 1
            DOCKER_IN_DOCKER: 1

      - template: common.yml
        parameters:
          Name: test_virtual_docker
          DisplayName: Test (Virtual on Docker, no prefix tree)
          Platform: virtual
          Variant: Docker
          ImageFilename: scitt-virtual.tar
          Environment:
            DOCKER: 1
            DOCKER_IN_DOCKER: 1

      # Temporarily disable sanitizers build, as cchost randomly fails in functional tests with the following error:
      # "UndefinedBehaviorSanitizer: undefined-behavior ../include/ccf/ds/logger.h:159:34: runtime error: -1.08502 is outside the range of representable values of type 'unsigned long'"
      # Example build: https://msazure.visualstudio.com/One/_build/results?buildId=82290496&view=logs&j=18afa956-2433-54b9-a984-6a92e16f0b5b&t=d846f465-8944-5ee0-9403-de1d697ca3f0&l=482
      # The problem seems to originate from the enclave offset being negative, which results in an unsigned long being negative: https://github.com/microsoft/CCF/blob/0e406e48409c819aea5139391a85f89dd090f0b5/include/ccf/ds/logger.h#L159
      # The negative offset seems to be the result of the difference between the time known to the enclave and the time known to the host: https://github.com/microsoft/CCF/blob/0e406e48409c819aea5139391a85f89dd090f0b5/src/host/handle_ring_buffer.h#L76
      # It is not clear yet if the problem originates from the CCF code or the SCITT code and will be investigated further in a future task.
      # - template: common.yml
      #   parameters:
      #     Name: test_san
      #     DisplayName: Test (Sanitizers, with prefix tree)
      #     Platform: virtual
      #     BuildCCF:
      #       Version: ${{ parameters.CCF_VERSION }}
      #       CMakeArgs: -DSAN=ON -DCMAKE_BUILD_TYPE=Debug -DLVI_MITIGATIONS=OFF
      #     Environment:
      #       CMAKE_BUILD_TYPE: Debug
      #       ENABLE_PREFIX_TREE: ON
      #       # Fast unwinder only gives us partial stack traces in LeakSanitzer
      #       # Alloc/dealloc mismatch has been disabled in CCF: https://github.com/microsoft/CCF/pull/5157
      #       ASAN_OPTIONS: fast_unwind_on_malloc=0:alloc_dealloc_mismatch=0
      #     # faketime does not play well with ASAN so don't enable it here.
      #     FunctionalTestArguments: '--enable-prefix-tree'
      #     InstallPackages: [ libcurl4-openssl-dev ]

      - template: common.yml
        parameters:
          Name: clang_tidy
          DisplayName: Clang tidy
          Platform: virtual
          RunTests: false
          Environment:
            CMAKE_BUILD_TYPE: Debug
            ENABLE_PREFIX_TREE: ON
            ENABLE_CLANG_TIDY: ON
          InstallPackages: [ libcurl4-openssl-dev, clang-tidy-10 ]

      - job: format
        displayName: Code Formatting
        container: virtual
        steps:
          - checkout: self
            submodules: true
            clean: true
            lfs: false

          - script: ./scripts/ci-checks.sh
            displayName: "CI checks"

  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/main/') }}:
    - stage: main
      jobs:
      - job: docker_push_main
        displayName: Publish to ACR (main)
        steps:
          - template: docker-push.yml
            parameters:
              gitTag: "${BUILD_SOURCEBRANCH#refs/heads/main/}"
              acrRegistry: $(ACR_REGISTRY_STAGING)
              containerRegistry: scitt-acr-conn-staging

  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
    - stage: release
      jobs:
      - job: docker_push_main
        displayName: Publish to staging ACR (Release)
        steps:
          - template: docker-push.yml
            parameters:
              gitTag: "${BUILD_SOURCEBRANCH#refs/tags/}"
              acrRegistry: $(ACR_REGISTRY_STAGING)
              containerRegistry: scitt-acr-conn-staging

      - job: docker_push_release
        displayName: Publish to prod ACR (Release)
        steps:
          - template: docker-push.yml
            parameters:
              gitTag: "${BUILD_SOURCEBRANCH#refs/tags/}"
              acrRegistry: $(ACR_REGISTRY_RELEASE)
              containerRegistry: scitt-acr-conn-release